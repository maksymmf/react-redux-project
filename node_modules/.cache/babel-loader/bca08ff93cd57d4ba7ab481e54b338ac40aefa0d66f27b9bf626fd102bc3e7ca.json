{"ast":null,"code":"import { displayUsers } from \"../store/actions\";\nlet fetchUsers = [];\nconst url = 'https://jsonplaceholder.typicode.com/users';\n\n// export function handleFetchUsers() {\n//     const url = 'https://jsonplaceholder.typicode.com/users';\n\n//     return function (dispatch) {\n//         try {\n//             const response = fetch(url);\n//             // fetchUsers = await response.json();\n//             fetchUsers = dispatch(displayUsers(response));\n//         } catch (error) {\n//             return [];\n//         }\n//     }\n// }\n\nexport default async function handleFetchRequest(url) {\n  try {\n    const response = await fetch(url);\n    fetchUsers = await response.json();\n  } catch (error) {\n    return [];\n  }\n}","map":{"version":3,"names":["displayUsers","fetchUsers","url","handleFetchRequest","response","fetch","json","error"],"sources":["/Users/maksymm/Desktop/task-3.4/task-3.4/src/asyncActions/users.js"],"sourcesContent":["import { displayUsers } from \"../store/actions\";\n\nlet fetchUsers = [];\nconst url = 'https://jsonplaceholder.typicode.com/users';\n\n// export function handleFetchUsers() {\n//     const url = 'https://jsonplaceholder.typicode.com/users';\n    \n//     return function (dispatch) {\n//         try {\n//             const response = fetch(url);\n//             // fetchUsers = await response.json();\n//             fetchUsers = dispatch(displayUsers(response));\n//         } catch (error) {\n//             return [];\n//         }\n//     }\n// }\n\nexport default async function handleFetchRequest(url) {\n    try {\n        const response = await fetch(url);\n\n        fetchUsers = await response.json();\n    } catch (error) {\n        return [];\n    }\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAE/C,IAAIC,UAAU,GAAG,EAAE;AACnB,MAAMC,GAAG,GAAG,4CAA4C;;AAExD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,eAAeC,kBAAkB,CAACD,GAAG,EAAE;EAClD,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IAEjCD,UAAU,GAAG,MAAMG,QAAQ,CAACE,IAAI,EAAE;EACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO,EAAE;EACb;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}